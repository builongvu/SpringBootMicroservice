spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.port=8080

spring.application.name=accounts
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:8071/

# enable các endpoint bị ẩn trong bản actuator 2.0
management.endpoints.web.exposure.include=*

eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8070/eureka/

# Configuring info endpoint
info.app.name=Accounts Microservices
info.app.description=Eazy Bank Accounts Application
info.app.version=1.0.0
# From spring boot 2.5, the /info endpoint is hidden by default inside actuator. To enable the same, please add one more property management.info.env.enabled=true
management.info.env.enabled=true

endpoints.shutdown.enabled=true
management.endpoint.shutdown.enabled=true

# Resilience4j (circuit breaker)
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.minimumNumberOfCalls= 5
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.failureRateThreshold= 50
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.waitDurationInOpenState= 30000
resilience4j.circuitbreaker.instances.detailsForCustomerSupportApp.permittedNumberOfCallsInHalfOpenState=2

# Resilience4j (retry)
resilience4j.retry.configs.default.registerHealthIndicator= true
resilience4j.retry.instances.retryForCustomerDetails.maxRetryAttempts=3
resilience4j.retry.instances.retryForCustomerDetails.waitDuration=2000

# Resilience4j (rate limiter)
resilience4j.ratelimiter.configs.default.registerHealthIndicator=true
resilience4j.ratelimiter.instances.sayHello.timeoutDuration=5000
resilience4j.ratelimiter.instances.sayHello.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.sayHello.limitForPeriod=1

# Micrometer related properties
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.metrics.distribution.percentiles-histogram.http.server.requests=true
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# oauth2 keycloak
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:7080/realms/master/protocol/openid-connect/certs


#localhost:8080/actuator
# check có những circuitbreaker nào
#http://localhost:8080/actuator/circuitbreakers
# check các event của circuitbreaker
#http://localhost:8080/actuator/circuitbreakerevents
# check có những retry nào
#http://localhost:8080/actuator/retries
# check các event của retry
#http://localhost:8080/actuator/retryevents
